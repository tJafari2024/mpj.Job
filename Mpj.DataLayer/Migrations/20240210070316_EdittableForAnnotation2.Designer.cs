// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mpj.DataLayer.Context;

#nullable disable

namespace Mpj.DataLayer.Migrations
{
    [DbContext(typeof(MpgDbContext))]
    [Migration("20240210070316_EdittableForAnnotation2")]
    partial class EdittableForAnnotation2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mpj.DataLayer.Entities.EmploymentForm.Employment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ARepresentativeFullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AbilityTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AbilityToTravelAsAMission")
                        .HasColumnType("bit");

                    b.Property<bool>("AbilityToWorkInClericalJobs")
                        .HasColumnType("bit");

                    b.Property<bool>("AbilityToWorkInShifts")
                        .HasColumnType("bit");

                    b.Property<string>("AccessiblePersonFullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AccessiblePersonJob")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AccessiblePersonMobile")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Avg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BirthCertificateId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BrithDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CardReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ChildrenCount")
                        .HasColumnType("int");

                    b.Property<long?>("CityId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<long?>("CityOfIssueCityId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<long?>("CityOfJobId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<long?>("CityOfPlaceOfStudyId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DegreeOfEducation")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionOfAccident")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DrivingLicences")
                        .HasColumnType("int");

                    b.Property<int>("EmploymentStatus")
                        .HasColumnType("int");

                    b.Property<string>("Entertainments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FieldOfStudy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstFamiliarFullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstFamiliarJob")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstFamiliarMobile")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("HasEmploymentHistory")
                        .HasColumnType("bit");

                    b.Property<bool>("HavingAnAccident")
                        .HasColumnType("bit");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Ideas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InsuranceHistoryMonth")
                        .HasColumnType("int");

                    b.Property<int>("InsuranceHistoryYear")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("JobFather")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaritalStatus")
                        .HasColumnType("int");

                    b.Property<int>("MilitaryServiceStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("MilitaryStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NationCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PersonalImage")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PhysicalCondition")
                        .HasColumnType("int");

                    b.Property<string>("PlaceOfServiceOrgan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProposedSalary")
                        .HasColumnType("int");

                    b.Property<long?>("ProvinceId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<long?>("ProvinceOfIssueId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<long?>("ProvinceOfJobId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<long?>("ProvinceOfPlaceOfStudyId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<string>("ReasonForLeavingWork")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Religion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RepresentativeJob")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RepresentativeMobile")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<long?>("ResidenceCityId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<int>("ResidencePeriodByMonth")
                        .HasColumnType("int");

                    b.Property<int>("ResidencePeriodByYear")
                        .HasColumnType("int");

                    b.Property<string>("ResidencePhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ResidencePostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long?>("ResidenceProvinceId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<string>("ResumeFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SatisfactionRules")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondFamiliarFullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecondFamiliarJob")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecondFamiliarMobile")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Sect")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SponsorshipCount")
                        .HasColumnType("int");

                    b.Property<int>("SponsorshipStatus")
                        .HasColumnType("int");

                    b.Property<string>("SpouseJob")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SpouseMobile")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("TotalNumberOfEyes")
                        .HasColumnType("int");

                    b.Property<bool>("UseOfGlasses")
                        .HasColumnType("bit");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.Property<string>("YearOfEndingEducation")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("YearOfEndingJob")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("YearOfStartingEducation")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("YearOfStartingJob")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CityOfIssueCityId");

                    b.HasIndex("CityOfJobId");

                    b.HasIndex("CityOfPlaceOfStudyId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("ProvinceOfIssueId");

                    b.HasIndex("ProvinceOfJobId");

                    b.HasIndex("ProvinceOfPlaceOfStudyId");

                    b.HasIndex("ResidenceCityId");

                    b.HasIndex("ResidenceProvinceId");

                    b.ToTable("Employments");
                });

            modelBuilder.Entity("Mpj.DataLayer.Entities.ProvinceAndCity.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CityName")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ProvinceId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Mpj.DataLayer.Entities.ProvinceAndCity.Province", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProvinceName")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("Mpj.DataLayer.Entities.EmploymentForm.Employment", b =>
                {
                    b.HasOne("Mpj.DataLayer.Entities.ProvinceAndCity.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mpj.DataLayer.Entities.ProvinceAndCity.City", "CityOfIssueCity")
                        .WithMany()
                        .HasForeignKey("CityOfIssueCityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mpj.DataLayer.Entities.ProvinceAndCity.City", "CityOfJob")
                        .WithMany()
                        .HasForeignKey("CityOfJobId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mpj.DataLayer.Entities.ProvinceAndCity.City", "CityOfPlaceOfStudy")
                        .WithMany()
                        .HasForeignKey("CityOfPlaceOfStudyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mpj.DataLayer.Entities.ProvinceAndCity.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mpj.DataLayer.Entities.ProvinceAndCity.Province", "ProvinceOfIssue")
                        .WithMany()
                        .HasForeignKey("ProvinceOfIssueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mpj.DataLayer.Entities.ProvinceAndCity.Province", "ProvinceOfJob")
                        .WithMany()
                        .HasForeignKey("ProvinceOfJobId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mpj.DataLayer.Entities.ProvinceAndCity.Province", "ProvinceOfPlaceOfStudy")
                        .WithMany()
                        .HasForeignKey("ProvinceOfPlaceOfStudyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mpj.DataLayer.Entities.ProvinceAndCity.City", "ResidenceCity")
                        .WithMany()
                        .HasForeignKey("ResidenceCityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mpj.DataLayer.Entities.ProvinceAndCity.Province", "ResidenceProvince")
                        .WithMany()
                        .HasForeignKey("ResidenceProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("CityOfIssueCity");

                    b.Navigation("CityOfJob");

                    b.Navigation("CityOfPlaceOfStudy");

                    b.Navigation("Province");

                    b.Navigation("ProvinceOfIssue");

                    b.Navigation("ProvinceOfJob");

                    b.Navigation("ProvinceOfPlaceOfStudy");

                    b.Navigation("ResidenceCity");

                    b.Navigation("ResidenceProvince");
                });

            modelBuilder.Entity("Mpj.DataLayer.Entities.ProvinceAndCity.City", b =>
                {
                    b.HasOne("Mpj.DataLayer.Entities.ProvinceAndCity.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Province");
                });
#pragma warning restore 612, 618
        }
    }
}
